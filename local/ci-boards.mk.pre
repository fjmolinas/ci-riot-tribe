# Use the 'tribe-ci' boards for flashing and testing
#
# e.g.: TRIBE_CI BOARD=nucleo-l152re make -C tests/xtimer_drift/ flash term
# ===============================================
ifneq (,$(TRIBE_CI))
  TRIBE_CI_SERVER ?= ci@ci-riot-tribe.saclay.inria.fr
  TRIBE_CI_DIR    ?= /builds/boards
  TRIBE_CI_MAKE   ?= BOARD=$(BOARD) QUIET=0 make --no-print-directory -C $(TRIBE_CI_DIR)
  # Remote flashfile respects the extension (required for openocd)
  TRIBE_CI_FLASHFILE ?= $(TRIBE_CI_DIR)/bin/$(BOARD)_flashfile$(suffix $(FLASHFILE))

  list-ci-boards:
	@ssh $(TRIBE_CI_SERVER) '$(TRIBE_CI_MAKE) list-boards'

  # Flash must do the copy and flash
  #  * 'IMAGE_OFFSET' must be sent to to handle 'riotboot/flash-slotX'
  #  * 'FLASHFILE' is set from the command line to force the value
  # Set FLASHER to 'ssh' to not trigger compiling 'edbg'
  override FLASHER = ssh
  override FFLAGS = $(TRIBE_CI_SERVER) 'IMAGE_OFFSET=$(IMAGE_OFFSET) $(TRIBE_CI_MAKE) flash-only FLASHFILE=$(TRIBE_CI_FLASHFILE)'
  # Use rsync to honor remote permissions
  SSH_UPLOAD = rsync --chmod=ugo=rwX
  define ci-flash-recipe
    $(SSH_UPLOAD) $(FLASHFILE) $(TRIBE_CI_SERVER):$(TRIBE_CI_FLASHFILE)
    $(FLASHER) $(FFLAGS)
  endef

  # edbg redefines flash-recipe, override to handle that case
  override flash-recipe = $(ci-flash-recipe)

  PREFLASHER = ssh
  PREFFLAGS = $(TRIBE_CI_SERVER) '$(TRIBE_CI_MAKE) preflash'

  RESET              = ssh
  RESET_FLAGS        = $(TRIBE_CI_SERVER) '$(TRIBE_CI_MAKE) reset'
  override TERMPROG  = ssh
  override TERMFLAGS = -t $(TRIBE_CI_SERVER) '$(TRIBE_CI_MAKE) term'
endif
